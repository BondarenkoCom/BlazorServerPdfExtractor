@page "/loadkeys"
@using ExtractLibrary.Helpers
@using SpecFlowPdfReader.Helpers

<h3 style="text-align: center; font-family: Arial, sans-serif; margin-bottom: 1rem;">Load Keys</h3>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
    }

    .form-container {
        max-width: 600px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: #ffffff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    }

    .input-container {
        margin-bottom: 1.5rem;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: .5rem;
    }

    input[type="text"], textarea {
        width: 100%;
        border: 1px solid #ccc;
        padding: .5rem;
        font-size: 16px;
        border-radius: 3px;
    }

    textarea {
        resize: none;
    }

    button {
        background-color: #007bff;
        border: none;
        color: #ffffff;
        padding: .75rem 1.5rem;
        font-size: 16px;
        border-radius: 3px;
        cursor: pointer;
        margin-right: .5rem;
    }

    button:hover {
        background-color: #0056b3;
    }
</style>

<div class="form-container">
    <div class="input-container">
        <label for="clientID">Client ID:</label>
        <input id="clientID" type="text" @bind="ClientIdInput" placeholder="Enter client ID">
    </div>
    <div class="input-container">
        <label for="clientSecret">Client Secret:</label>
        <input id="clientSecret" type="text" @bind="ClientSecretInput" placeholder="Enter client secret">
    </div>
    <div class="input-container">
        <label for="organizationId">Organization ID:</label>
        <input id="organizationId" type="text" @bind="OrganizationIdInput" placeholder="Enter organization ID">
    </div>
    <div class="input-container">
        <label for="accountId">Account ID:</label>
        <input id="accountId" type="text" @bind="AccountIdInput" placeholder="Enter account ID">
    </div>
    <div class="input-container">
        <label for="privateTextContain">Private Text Contain:</label>
        <textarea id="privateTextContain" rows="5" @bind="PrivateKeyTextInput" placeholder="Enter private key text"></textarea>
    </div>
    <button @onclick="ReadKeysAdobe">Read keys</button>
    <button @onclick="UpdateKeys">Update keys</button>
    <br>
    <br>
    <textarea rows="15" cols="40" @bind="MyText"></textarea>
</div>


@code {
    CheckAdobe _checkAdobe = new CheckAdobe();
    private string WorkPath;
    private string MyText;
    private string ClientIdInput;
    private string ClientSecretInput;
    private string OrganizationIdInput;
    private string AccountIdInput;
    private string PrivateKeyFileInput;
    private string PrivateKeyTextInput;

    public async void ReadKeysAdobe()
    {
        var res = await _checkAdobe.GetAdobeKeysValue();
        MyText =
        ($"Work path - {res.Item1} \n client ID - {res.Item2} \n client Secret - {res.Item3} \n adobe organizationId - {res.Item4} \n adobeAccountId - {res.Item5} \n ------ \n private key text - {res.Item7} \n");
    }

    public async void UpdateKeys()
    {
        JsonHelper.UpdateAdobeKeys(ClientIdInput, ClientSecretInput, OrganizationIdInput, AccountIdInput, PrivateKeyTextInput);
    }
}
